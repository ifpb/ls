(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[884],{2130:function(e,n,a){"use strict";a.r(n);var l=a(159),s=a(219),o=(a(7294),a(3905)),t=a(4905),m=a.n(t),r=a(8876),u=a(2802),d=(a(5675),["components"]),c=function(e){return(0,r.withSSG)(m()({filename:"index.md",route:"/classnotes/03",meta:{},pageMap:[{name:"classnote",route:"/classnote"},{name:"classnotes",children:[{name:"01",children:[{name:"index",route:"/classnotes/01"},{name:"meta.json",meta:{index:"Aula 01"}}],route:"/classnotes/01"},{name:"02",children:[{name:"index",route:"/classnotes/02"},{name:"meta.json",meta:{index:"Aula 02"}}],route:"/classnotes/02"},{name:"03",children:[{name:"index",route:"/classnotes/03"},{name:"meta.json",meta:{index:"Aula 03"}}],route:"/classnotes/03"},{name:"04",children:[{name:"index",route:"/classnotes/04"},{name:"meta.json",meta:{index:"Aula 04"}}],route:"/classnotes/04"},{name:"05",children:[{name:"index",route:"/classnotes/05"},{name:"meta.json",meta:{index:"Aula 05"}}],route:"/classnotes/05"},{name:"06",children:[{name:"index",route:"/classnotes/06"},{name:"meta.json",meta:{index:"Aula 06"}}],route:"/classnotes/06"},{name:"07",children:[{name:"index",route:"/classnotes/07"},{name:"meta.json",meta:{index:"Aula 07"}}],route:"/classnotes/07"},{name:"08",children:[{name:"index",route:"/classnotes/08"},{name:"meta.json",meta:{index:"Aula 08"}}],route:"/classnotes/08"},{name:"09",children:[{name:"index",route:"/classnotes/09"},{name:"meta.json",meta:{index:"Aula 09"}}],route:"/classnotes/09"},{name:"10",children:[{name:"index",route:"/classnotes/10"},{name:"meta.json",meta:{index:"Aula 10"}}],route:"/classnotes/10"},{name:"11",children:[{name:"index",route:"/classnotes/11"},{name:"meta.json",meta:{index:"Aula 11"}}],route:"/classnotes/11"},{name:"12",children:[{name:"index",route:"/classnotes/12"},{name:"meta.json",meta:{index:"Aula 12"}}],route:"/classnotes/12"},{name:"13",children:[{name:"index",route:"/classnotes/13"},{name:"meta.json",meta:{index:"Aula 13"}}],route:"/classnotes/13"},{name:"14",children:[{name:"index",route:"/classnotes/14"},{name:"meta.json",meta:{index:"Aula 14"}}],route:"/classnotes/14"},{name:"15",children:[{name:"index",route:"/classnotes/15"},{name:"meta.json",meta:{index:"Aula 15"}}],route:"/classnotes/15"},{name:"16",children:[{name:"index",route:"/classnotes/16"},{name:"meta.json",meta:{index:"Aula 16"}}],route:"/classnotes/16"},{name:"meta.json",meta:{10:{title:"Aula 10",type:"nav",hidden:!0},11:{title:"Aula 11",type:"nav",hidden:!0},12:{title:"Aula 12",type:"nav",hidden:!0},13:{title:"Aula 13",type:"nav",hidden:!0},14:{title:"Aula 14",type:"nav",hidden:!0},15:{title:"Aula 15",type:"nav",hidden:!0},16:{title:"Aula 16",type:"nav",hidden:!0},"01":{title:"Aula 01",type:"nav",hidden:!0},"02":{title:"Aula 02",type:"nav",hidden:!0},"03":{title:"Aula 03",type:"nav",hidden:!0},"04":{title:"Aula 04",type:"nav",hidden:!0},"05":{title:"Aula 05",type:"nav",hidden:!0},"06":{title:"Aula 06",type:"nav",hidden:!0},"07":{title:"Aula 07",type:"nav",hidden:!0},"08":{title:"Aula 08",type:"nav",hidden:!0},"09":{title:"Aula 09",type:"nav",hidden:!0}}}],route:"/classnotes"},{name:"content",route:"/content"},{name:"exams",children:[{name:"blog",route:"/exams/blog"},{name:"meta.json",meta:{blog:{title:"Blog",type:"nav",hidden:!0},projeto:"Projeto","prova-ecma":{title:"Prova ECMA",type:"nav",hidden:!0},"prova-w3c":{title:"Prova W3C",type:"nav",hidden:!0},"prova-final":{title:"Prova Final",type:"nav",hidden:!0}}},{name:"projeto",route:"/exams/projeto"},{name:"prova-ecma",route:"/exams/prova-ecma"},{name:"prova-final",route:"/exams/prova-final"},{name:"prova-w3c",route:"/exams/prova-w3c"}],route:"/exams"},{name:"index",route:"/"},{name:"meta.json",meta:{index:"Disciplina",classnote:"Aulas",classnotes:{title:"Aulas",type:"nav",hidden:!0},content:"Conte\xfado",outline:{title:"Roteiro",type:"nav",hidden:!0},tools:"Ferramentas",exams:{title:"Exames",type:"nav",hidden:!0}}},{name:"outline",route:"/outline"},{name:"tools",route:"/tools"}]},u.Z))(e)};function i(e){var n=e.components,a=(0,s.Z)(e,d);return(0,o.mdx)(c,(0,l.Z)({components:n},a),(0,o.mdx)("h1",null,"Array"),(0,o.mdx)("h2",null,"Cria\xe7\xe3o"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4, 7];\n\nconsole.log(numbers); //=> [ 1, 2, 4, 7 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [];\n\nnumbers[0] = 10;\nnumbers[1] = 20;\nnumbers[10] = 100;\n\nconsole.log(numbers); //=> [ 10, 20, , , , , , , , , 100 ]\n")),(0,o.mdx)("h2",null,"Acesso e Altera\xe7\xe3o"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4, 7];\n\nconsole.log(numbers[0]); //=> 1\nconsole.log(numbers[3]); //=> 7\nconsole.log(numbers[4]); //=> undefined\nconsole.log(numbers); //=> [ 1, 2, 4, 7 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4, 7];\n\n// change value\nnumbers[2] = 5;\n\n// add value\nnumbers[4] = 10;\nconsole.log(numbers); //=> [ 1, 2, 5, 7, 10 ]\n\n// delete value\ndelete numbers[4];\nconsole.log(numbers); //=> [ 1, 2, 5, 7,  ]\n")),(0,o.mdx)("h2",null,"Tipos M\xfaltiplos"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const values = [1, 'John', true, null, [1, 2]];\nconsole.log(values[1]); //=> \"John\"\nconsole.log(values[4]); //=> [1, 2]\nconsole.log(values[4][1]); //=> 2\n")),(0,o.mdx)("h2",null,"Spread Operator"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log([...numbers, 4, 5]); //=> [ 1, 2, 3, 4, 5 ]\n")),(0,o.mdx)("h2",null,"Itera\xe7\xe3o"),(0,o.mdx)("p",null,"for"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4];\nlet result = '';\n\nfor (let flag = 0; flag < numbers.length; flag++) {\n  result += numbers[flag] + ' ';\n}\n\nconsole.log(result); //=> \"1 2 4 \"\n")),(0,o.mdx)("p",null,"for..in"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4];\nlet result = '';\n\nfor (const index in numbers) {\n  result += numbers[index] + ' ';\n}\n\nconsole.log(result); //=> \"1 2 4 \"\n")),(0,o.mdx)("p",null,"for..of"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 4];\nlet result = '';\n\nfor (const value of numbers) {\n  result += value + ' ';\n}\n\nconsole.log(result); //=> \"1 2 4 \"\n")),(0,o.mdx)("h2",null,"Objeto Array"),(0,o.mdx)("p",null,"Property: ",(0,o.mdx)("inlineCode",{parentName:"p"},"length")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.length); //=> 3\n")),(0,o.mdx)("p",null,"Mutator: ",(0,o.mdx)("inlineCode",{parentName:"p"},"push()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"unshift()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"pop()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"shift()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"reverse()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"sort()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"splice()")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.push(4)); //=> 4\nconsole.log(numbers); //=> [ 1, 2, 3, 4 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.unshift(0)); //=> 4\nconsole.log(numbers); //=> [ 0, 1, 2, 3 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.pop()); //=> 3\nconsole.log(numbers); //=> [ 1, 2 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.shift()); //=> 1\nconsole.log(numbers); //=> [ 2, 3 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.reverse()); //=> [ 3, 2, 1 ]\nconsole.log(numbers); //=> [ 3, 2, 1 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [3, 1, 2];\nconsole.log(numbers.sort()); //=> [ 1, 2, 3 ]\nconsole.log(numbers); //=> [ 1, 2, 3 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const numbers = [1, 2, 3];\nconsole.log(numbers.splice(1, 2)); //=> [ 2, 3 ]\nconsole.log(numbers); //=> [1]\n")),(0,o.mdx)("p",null,"Accessor: ",(0,o.mdx)("inlineCode",{parentName:"p"},"includes()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"join()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"slice()")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"console.log([1, 2, 3].includes(1)); //=> true\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"console.log([1, 2, 3].join(' ')); //=> \"1 2 3\"\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"console.log([1, 2, 3].slice(1, 2)); //=> 2\n")),(0,o.mdx)("p",null,"Iteration: ",(0,o.mdx)("inlineCode",{parentName:"p"},"map()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"filter()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"reduce()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"every()"),", ",(0,o.mdx)("inlineCode",{parentName:"p"},"some()")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const array = [1, 2, 3, 4, 5, 6];\nconsole.log(array.map((value) => value * 2)); //=> [ 2, 4, 6, 8, 10, 12 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const array = [1, 2, 3, 4, 5, 6];\nconsole.log(array.filter((value) => value % 2 !== 0)); //=> [ 1, 3, 5 ]\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const array = [1, 2, 3, 4, 5, 6];\nconsole.log(array.reduce((addition, value) => addition + value, 0)); //=> 21\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const array = [2, 4, 6];\nconsole.log(array.every((value) => value % 2 == 0)); //=> true\n")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{className:"language-js",parentName:"pre"},"const array = [1, 2, 3, 4, 5, 6];\nconsole.log(array.some((value) => value % 2 == 0)); //=> true\n")))}i.isMDXComponent=!0,n.default=i},7228:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/classnotes/03",function(){return a(2130)}])}},function(e){e.O(0,[286,164,774,888,179],(function(){return n=7228,e(e.s=n);var n}));var n=e.O();_N_E=n}]);